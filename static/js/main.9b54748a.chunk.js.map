{"version":3,"sources":["Services/Requester.js","Controllers/characters.js","Components/Search.jsx","Components/Header.jsx","Components/Loading.jsx","Components/Character.jsx","Components/CharacterGrid.jsx","Components/ButtonGroup.jsx","Components/Button.jsx","Screens/ListCharacters.jsx","App.jsx","serviceWorker.js","index.jsx","Assets/search.svg"],"names":["requester","baseUrl","this","params","filter","Object","keys","reduce","key","index","symbol","endpoint","serviceUrl","fetch","method","then","response","a","ok","json","data","catch","error","Error","statusText","getCharacters","setParams","get","style","container","position","input","backgroundColor","color","border","borderBottom","borderColor","fontSize","fontWeight","paddingBottom","icon","float","right","Search","onChangeValue","value","type","placeholder","onChange","event","target","src","SearchIcon","alt","display","alignItems","justifyContent","padding","title","Header","onSearch","searchValue","text","left","bottom","transform","margin","Loading","character","isAlive","top","zIndex","image","justifySelf","height","width","objectFit","summary","marginRight","textAlign","textShadow","Character","status","img","nickname","name","birthday","occupation","join","gridTemplateColumns","gridAutoRows","renderCharacter","char_id","CharacterGrid","characters","map","ButtonGroup","children","button","Button","onClick","label","ListCharacters","useState","limit","offset","search","loading","state","setState","updateCharacters","innerState","useEffect","toLowerCase","includes","previousOffset","nextOffset","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9b54748a.chunk.js","sourcesContent":["export default class Requester {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n    this.params = '';\n  }\n\n  setParams(filter) {\n    this.params = Object.keys(filter).reduce((params, key, index) => {\n      const symbol = index === 0 ? '?' : '&';\n      return `${params}${symbol}${key}=${filter[key]}`;\n    }, '');\n  }\n\n  get(endpoint) {\n    const serviceUrl = `${this.baseUrl}${endpoint}${this.params}`;\n    const configuration = { method: 'GET' };\n    return fetch(serviceUrl, configuration)\n      .then(async (response) => {\n        if (response.ok) {\n          return response.json()\n            .then((data) => [null, data])\n            .catch((error) => [error]);\n        }\n        return [new Error(response.statusText)];\n      });\n  }\n}\n\nexport const requester = new Requester('https://www.breakingbadapi.com/api/');\n","import { requester } from '../Services/Requester';\n\nconst endpoint = 'characters';\n\nexport const getCharacters = async (filter = {}) => {\n  requester.setParams(filter);\n  const [error, data] = await requester.get(endpoint);\n  if (error) {\n    return [];\n  }\n  return data;\n};\n\nexport const getCharacterById = async (id = '') => {\n  requester.setParams({});\n  const endpointWithId = `${endpoint}/${id}`;\n  const [error, data] = await requester.get(endpointWithId);\n  if (error) {\n    return {};\n  }\n  return data[0];\n};\n","import React from 'react';\nimport SearchIcon from '../Assets/search.svg';\n\nconst style = {\n  container: {\n    position: 'relative',\n  },\n  input: {\n    backgroundColor: 'black',\n    color: 'white',\n    border: 'none',\n    borderBottom: 'solid',\n    borderColor: 'white',\n    fontSize: 'medium',\n    fontWeight: 'bold',\n    paddingBottom: '10px',\n  },\n  icon: {\n    float: 'right',\n    position: 'absolute',\n    right: '0',\n  },\n};\n\nconst Search = ({ onChangeValue, value }) => (\n  <div style={style.container}>\n    <input\n      type=\"search\"\n      value={value}\n      placeholder=\"Pesquise os personagens\"\n      onChange={(event) => onChangeValue(event.target.value)}\n      style={style.input}\n    />\n    <img src={SearchIcon} alt=\"Ícone de busca\" style={style.icon} />\n  </div>\n);\n\nexport default Search;\n","import React from 'react';\nimport Search from './Search';\n\nconst style = {\n  container: {\n    display: 'flex',\n    position: 'relative',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '0 10%',\n  },\n  title: { color: 'white' },\n};\n\nconst Header = ({ title, onSearch, searchValue }) => (\n  <div style={style.container}>\n    <h1 style={style.title}>{title}</h1>\n    <Search onChangeValue={onSearch} value={searchValue} />\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst style = {\n  text: {\n    position: 'fixed',\n    left: '50%',\n    bottom: '50%',\n    transform: 'translate(-50%, -50%)',\n    margin: '0 auto',\n    color: 'white',\n  },\n};\n\nconst Loading = () => (\n  <h1 style={style.text}>Carregando...</h1>\n);\n\nexport default Loading;\n","import React from 'react';\n\nconst style = {\n  container: {\n    padding: '5%',\n    position: 'relative',\n  },\n  character: (isAlive) => ({\n    float: 'right',\n    position: 'absolute',\n    right: '5%',\n    top: '6%',\n    zIndex: '10',\n    backgroundColor: isAlive ? 'green' : 'red',\n    padding: '5px',\n    color: 'white',\n  }),\n  image: {\n    justifySelf: 'center',\n    height: '100%',\n    width: '100%',\n    objectFit: 'cover',\n  },\n  summary: {\n    float: 'left',\n    position: 'absolute',\n    left: '10%',\n    bottom: '0',\n    zIndex: '10',\n    backgroundColor: 'transparent',\n    marginRight: '10%',\n    color: 'white',\n    textAlign: 'left',\n    textShadow: '1px 1px black',\n    height: '40%',\n  },\n};\n\nconst Character = ({\n  status,\n  img,\n  nickname,\n  name,\n  birthday,\n  occupation = [],\n}) => (\n  <div style={style.container}>\n    <div style={style.character(status === 'Alive')}>\n      {status === 'Alive' ? 'Vivo' : 'Morto'}\n    </div>\n    <img\n      src={img}\n      alt={`Imagem de ${nickname}`}\n      style={style.image}\n    />\n    <div style={style.summary}>\n      <h4>{name}</h4>\n      <p>\n        <span>&#8902;</span>\n        {birthday}\n      </p>\n      <p>{occupation.join(', ')}</p>\n    </div>\n  </div>\n);\n\nexport default Character;\n","import React from 'react';\nimport Character from './Character';\n\nconst style = {\n  container: {\n    padding: '2% 10%',\n    display: 'grid',\n    gridTemplateColumns: 'repeat(4, 25%)',\n    gridAutoRows: '350px',\n  },\n};\n\nconst renderCharacter = (character) => (\n  <Character key={character.char_id} {...character} />\n);\n\nconst CharacterGrid = ({ characters = [] }) => (\n  <div style={style.container}>\n    {characters.map(renderCharacter)}\n  </div>\n);\n\nexport default CharacterGrid;\n","import React from 'react';\n\nconst ButtonGroup = ({ children }) => (\n  <div>\n    {children}\n  </div>\n);\n\nexport default ButtonGroup;\n","import React from 'react';\n\nconst style = {\n  button: {\n    backgroundColor: 'black',\n    color: 'white',\n    border: 'none',\n    fontSize: 'medium',\n    fontWeight: 'bold',\n  },\n};\n\nconst Button = ({ onClick, label }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n    style={style.button}\n  >\n    {label}\n  </button>\n);\n\nexport default Button;\n","import React, { useState, useEffect } from 'react';\n\nimport { getCharacters } from '../Controllers/characters';\n\nimport Header from '../Components/Header';\nimport Loading from '../Components/Loading';\nimport CharacterGrid from '../Components/CharacterGrid';\nimport ButtonGroup from '../Components/ButtonGroup';\nimport Button from '../Components/Button';\n\nconst ListCharacters = () => {\n  const [state, setState] = useState({\n    characters: [],\n    limit: 8,\n    offset: 0,\n    search: '',\n    loading: true,\n  });\n\n  const updateCharacters = (characters) => {\n    setState((innerState) => ({ ...innerState, characters, loading: false }));\n  };\n\n  useEffect(() => {\n    const initialFilter = { limit: 8, offset: 0 };\n    getCharacters(initialFilter).then(updateCharacters);\n  }, []);\n\n  useEffect(() => {\n    const filter = { limit: state.limit, offset: state.offset };\n    getCharacters(filter).then(updateCharacters);\n  }, [state.limit, state.offset]);\n\n  const previousPage = () => {\n    const previousOffset = state.offset - state.limit;\n    const offset = previousOffset > -1 ? previousOffset : state.offset;\n    const loading = previousOffset > -1;\n    setState({ ...state, offset, loading });\n  };\n\n  const nextPage = () => {\n    const nextOffset = state.offset + state.limit;\n    const offset = nextOffset > 57 ? state.offset : nextOffset;\n    const loading = !(nextOffset > 57);\n    setState({ ...state, offset, loading });\n  };\n\n  const handleSearchName = (search) => setState({ ...state, search });\n\n  const nameSearch = (character) => character.name.toLowerCase()\n    .includes(state.search.toLowerCase());\n\n  return (\n    <>\n      <Header\n        title={state.search ? `Você pesquisou por \"${state.search}\"` : 'Personagens'}\n        onSearch={handleSearchName}\n        searchValue={state.search}\n      />\n      {state.loading && <Loading />}\n      {!state.loading && <CharacterGrid characters={state.characters.filter(nameSearch)} />}\n      <ButtonGroup>\n        <Button label=\"Anterior\" onClick={previousPage} />\n        <Button label=\"Próxima\" onClick={nextPage} />\n      </ButtonGroup>\n    </>\n  );\n};\n\nexport default ListCharacters;\n","import React from 'react';\nimport ListCharacters from './Screens/ListCharacters';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ListCharacters />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/search.2861cc87.svg\";"],"sourceRoot":""}